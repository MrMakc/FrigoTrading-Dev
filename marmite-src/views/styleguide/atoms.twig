{% extends '../layout/styleguide.twig' %}

{% block sgContent %}
  <div class="sg-section h-align-center">
    <div class="sg-h1">Atoms</div>
  </div>

  <div id="sg-buttons" class="sg-section">
    <div class="sg-h2">Buttons</div>
    <div class="sg-callout sg-callout-info">
      <div class="sg-callout-title">Usage</div>
      <ul>
        <li>Use base class <code>.a-button</code> for all buttons. This class alone will get you a plain white button.</li>
        <li>You can change text color of plain white button with global color helpers : <code>.h-color-primary</code> <code>.h-color-secondary</code></li>
        <li>Plain colored-buttons have <code>.as--primary</code> <code>.as--secondary</code></li>
        <li>Make button 100% width with <code>.as--fullwidth</code></li>
        <li>Add <code>.as--icon</code> to use a SVG icon in a button. Use <code>.a-icon-<em>color</em></code> on <code>.a-icon</code> for proper SVG color</li>
        <li>Button helpers include <code>.as--no-hover</code> (prevent hover) <code>[disabled="disabled"]</code> (pointer-events:none / opacity :.2) & <code>.as--loading</code></li>
      </ul>
    </div>
  </div>

  <div id="sg-buttons-plain-colored" class="sg-section">
    <div class="sg-h3">Plain colored buttons</div>
    <div data-xrayhtml>

      {{ macros.btnLink('.as--primary','as--primary','#_') }}
      {{ macros.btnButton('.as--secondary','as--secondary') }}
      {{ macros.btnSpan('OK','as--circle as--secondary') }}
      {{ macros.btnSpan('OK','as--circle as--primary') }}
      {{ macros.btnSubmit('OK','as--circle as--secondary as--loading') }}

    </div>
  </div>

  <div id="sg-buttons-white-ghost" class="sg-section">
    <div class="sg-h3">Plain white & ghost buttons</div>
    <div data-xrayhtml>
      <div style="background:#aaa;padding:20px;">
        {{ macros.btnSpan('.a-button') }}
        {{ macros.btnSpan('.a-button.h-color-primary','h-color-primary') }}
        {{ macros.btnSpan('.a-button.h-color-secondary','h-color-secondary') }}
        {{ macros.btnSpan('OK','as--circle h-color-primary') }}
        {{ macros.btnSpan('OK','as--circle h-color-secondary') }}
        <br>

        {{ macros.btnSpan('.as--ghost','as--ghost') }}
        {{ macros.btnSpan('.as--primary.as--ghost','as--primary as--ghost') }}
        {{ macros.btnSpan('.as--secondary.as--ghost','as--secondary as--ghost') }}
        {{ macros.btnSpan('.as--white.as--ghost','as--white as--ghost') }}
      </div>
    </div>
  </div>

  <div id="sg-buttons-full-width" class="sg-section">
    <div class="sg-h3">Full width buttons</div>
    <div data-xrayhtml>
      <div style="background:#aaa;padding:20px;max-width:800px;margin:15px auto">
        {{ macros.btnLink('.a-button.as--fullwidth','as--fullwidth','#_') }}
        <br>
        {{ macros.btnLink('.a-button.as--primary.as--fullwidth','as--primary as--fullwidth','#_') }}
      </div>
    </div>
  </div>

  <div id="sg-buttons-misc" class="sg-section">
    <div class="sg-h3">Misc buttons</div>
    <div data-xrayhtml>
      <div style="padding:15px;background:#161616;">

        {{ macros.btnLink('Button with icon left','as--primary as--icon','#_','twitter') }}
        {{ macros.btnLink('Button with icon right','as--icon','#_','twitter','20','right') }}
        <br><br>
        {{ macros.btnLink('','as--icon h-color-primary','#_','twitter') }}
        <br> <br>
        {{ macros.btnLink('Button color primary fullwidth with icon left','as--icon as--fullwidth h-color-primary','#_','twitter') }}
        <br>
        {{ macros.btnLink('Button color secondary fullwidth with icon right','as--icon as--fullwidth h-color-secondary','#_','twitter','','right') }}
      </div>
    </div>
    <div data-xrayhtml>
      {{ macros.btnSpan('a-button as--disabled','as--primary as--disabled') }}
      {{ macros.btnSpan('a-button as--no-hover','as--primary as--no-hover') }}
    </div>
  </div>
  {# /.sg-section  #}

  <div id="sg-icons" class="sg-section">
    <div class="sg-h2">Icons</div>
    <div class="sg-callout sg-callout-info">
      <div class="sg-callout-title">SVG Preparation</div>
      <ul>
        <li><strong>1. Prepare .ai file</strong> :
          <ul>
            <li>- Artboard tool &gt; fit to artwork bounds / Objet &gt; Plan de travail &gt; Ajuster aux limites de l'illustration</li>
            <li>- Select all elements : Ctrl + A</li>
            <li>- Remove groups / Objet &gt; Dissocier (jusqu'à ne plus avoir l'option active)</li>
            <li>- Transform stroke into path with Object &gt; Path &gt; Outline stroke / Objet &gt; Tracé &gt; Vectoriser le contour</li>
            <li>- Make it Object &gt; Compound Path / Objet &gt; Tracé &gt; Joindre</li>
            <li>- Save as svg profile svg 1.1 / type svg</li>
          </ul>
        </li>
        {#<li><strong>2. Remove whitespace</strong> : <a href="https://petercollingridge.appspot.com/svg-editor" target="_blank">svg-editor</a></li>
        <li><strong>3. In &lt;svg> keep only attributs</strong> : xmlns / viewBox / enable-background</li>
        <li><strong>4. In &lt;path> keep only attributs</strong> : d</li>#}
        <li><strong>2. Save in :</strong> /marmite-src/assets/img/svg/</li>
        <li><strong>3. run :</strong>gulp images</li>
        <li><strong>4. Use it inline as below</strong></li>
      </ul>
    </div>
    <div class="sg-callout sg-callout-info">
      <div class="grid">
        <div class="col-4_mq2-12">
          <div class="sg-callout-title">Icon size</div>
          <p>Default icon size is 25 x 25</p><br>
          <ul>
            <li><code>.as--12</code>12 x 12</li>
            <li><code>.as--15</code>15 x 15</li>
            <li><code>.as--20</code>20 x 20</li>
            <li><code>.as--25</code>25 x 25</li>
            <li><code>.as--35</code>35 x 35</li>
            <li><code>.as--45</code>45 x 45</li>
            <li><code>.as--55</code>55 x 55</li>
          </ul>
        </div>
        <div class="col-8_mq2-12">
          <div class="sg-callout-title">Icon color & forced rollovers</div>
          <p>Default icon color is @color-text-dark (#4C4A48)</p><br>
          <ul>
            {% for key,color in aColors %}
              <li><code>.as--{{ key }}</code> / <code>.as--hover-{{ key }}</code></li>
            {% endfor %}
          </ul>
          <p>Mixin fill svg :
          <pre>
<code class="language-markup">._svgColor(@fillColor:@color-text-dark, @strokeColor:transparent)</code></pre>
          <br> (the two params are optional)</p>
        </div>
      </div>
    </div>

    {% set assets = "../assets/" %}

    <div class="sg-h3">Project Icons list:</div>

    <div class="sg-list-icons">
      {% set aIcons = [
        "eye",
        "eye-closed",
        "share",
      ] %}
      {% for iconName in aIcons %}
        <div data-xrayhtml class="sg-icon" data-title="#icon-{{ iconName }}">
          {{ macros.svg(iconName,'',iconName) }}
        </div>
      {% endfor %}
    </div>

    <div class="sg-h3">Social Icons (with inherit Brand-color):</div>

    <div class="sg-list-icons">
      {% set aIcons = [
        "facebook",
        "flickr",
        "googleplus",
        "instagram",
        "linkedin",
        "pinterest",
        "tumblr",
        "twitter",
        "viadeo",
        "vimeo",
        "youtube",
      ] %}
      {% for iconName in aIcons %}
        <div data-xrayhtml class="sg-icon" data-title="#icon-{{ iconName }}">
          {{ macros.svg(iconName,'','as--'~iconName) }}
        </div>
      {% endfor %}
    </div>

    <div class="sg-h3">Icons size:</div>

    <div class="sg-list-icons">
      {% set aIcons = [
        "12",
        "15",
        "20",
        "25",
        "35",
        "45",
        "55"
      ] %}
      {% for iconSize in aIcons %}
        <div data-xrayhtml class="sg-icon" data-title=".as--{{ iconSize }}">
          {{ macros.svg('twitter',iconSize) }}
        </div>
      {% endfor %}
    </div>

  </div>
  {# /.sg-section  #}
{% endblock sgContent %}
